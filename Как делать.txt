Как установить GO из архива
1. распаковать архив в желаемый каталог
2. создать переменную среды окружения Windows с именем GOROOT и указать в качестве ее значения путь из п.1
3. добавить в переменную PATH значение %GOROOT%\bin
4. запустить командный интерпретатор
5. выполнить команду go version 
6. если есть осмысленный вывод на экран, то все ОК

7. Установить переменную среды окружения GOPATH на каталог, где лежат проекты (не факт, что эта переменная нужна)

переменные среды в Windows 10 устанавливаются 
1. правой кнопкой мыши "Этот компьютер" (например из проводника)
2. свойства
3. дополнительные параметры системы (верт меню слева)
4. закладка "дополнительно" 
5. кнопка "переменные среды"


Как компилировать
1. В коммандном интерпретаторе зайти в каталог проекта
2. выполнить команду (имя модуля можно не указывать)
	go mod init Имя_модуля_проекта
3. выполнить команду 
	go build
 выполнимый файл будет помещен в каталог %GOPATH%\bin


Как установить VSCode
1. Запустить установку. По умолчанию ставится в %USERPROFILE%\AppData\Local\Programs\Microsoft VS Code
2. Установить расширение GO для VSCode https://go.dev/doc/editors (https://go.dev/ меню Docs\Go User Manual\Editor plugins and IDEs)
3. Запусть VSCode с каким-нибудь исходником GO
4. VSCode скажет "The "gopls" command is not available. Run "go install -v golang.org/x/tools/gopls@latest" to install." и предложит установить. Установка идет долго, т.к. качает из Интернета
5. VSCode скажет "The "go-outline" command is not available. Run "go install -v github.com/ramya-rao-a/go-outline@v0.0.0-20210608161538-9736a4bde949" to install." и предложит установить. Установка идет долго, т.к. качает из Интернета
6. При попытке запустить код на исполнение VSCode скажет предложит установить отладчик. Установка идет долго, т.к. качает из Интернета
 

Чтобы передать параметры в модуль при отладке из VSCode
1. в VSCode выбрать пункт меню RUN\Open Configurations (для открытия имеющейся конфигурации без добавления новой секции name) или RUN\Add Configuration... (для открытия имеющейся конфигурации с добавлением новой секции name) и отредактировать или добавить строчку вида "args": ["первый_параметр", "второй_параметр", ...]
2. При стандартной установке VSCode файл настрое сохраняется в файле settings.json каталога %APPDATA%\Code\User


Установить GIT локально
1. Скачать дистрибутив из https://git-scm.com/download/win
(или можно зайти в VSCode, нажать кнопку "Source Control (Ctrl+Shift+G)". Откроется тот же сайт)
2. Установить/ По умолчанию ставится в C:\Program Files\Git
3. Запустить VSCode
4. Открыть каталог, который хотим использовать как репозитарий.
5. Нажать кнопку "Source Control (Ctrl+Shift+G)". Поищется репозитарий в папке. Не найдется. Будет предложено создать новый либо только для GIT, либо и для GIT и для GinHub 
6. Что комитить на GinHub надо в коммандной строке Windows выполнить комманды:
	git config --global user.email "you@example.com"
  	git config --global user.name "Your Name"


Опубликовать локальный репозиторий на GitHub средствами VSCode (пока нашел только этот способ)
1. В VSCode должны быть закрыты редакторы и каталоги (меню File затем Close Editor (Ctrl+F4) или Close Folder (Ctrl+K F))
2. Слева в боковой панели VS Code выбирать вкладку Explorer и открыть нужный каталог
3. Слева в боковой панели VS Code выбирать вкладку Source Conyrol и инициализировать репозиторий (он будет инициализирован локально) 
5. Создать репозиторий на GitHub 
6. Опять зайти в Source Conyrol и нажать троеточие (...) справа от текста "SOURCE CONTROL REPOSITORIES". В выпадающем меню выбрать пункт Remote а затем Add Remote...
7. В карусели команд указать путь до репозитория на GitHub (полный путь с расширением .git), созданного на этапе 5, и затем задать имя репозитория
8. В VSCode выполнить команду Commit & Push, выбрав ее из выпадающего синего меню под текстом "SOURCE CONTROL"  


Скачать репозиторий GitHub локально средствами VSCode 
1. В VSCode должны быть закрыты редакторы и каталоги (меню File затем Close Editor (Ctrl+F4) или Close Folder (Ctrl+K F)), иначе действие Clone Repository будет недоступно в VSCode 
2. Слева в боковой панели VS Code выбирать вкладку Source Conyrol. Затем кнопку Clone Repository
3. В карусели команд указать путь до репозитория на GitHub (полный путь с расширением .git)
4. Указать место на диске, куда сохранить репозиторий
5. Репозиторий из GitHub будет скачен локально 

git config --global user.name "serg703"
git config --global user.email "k1s1v2@yahoo.com"

Поменять учетную запись подключения к GitHub
1. Зайти в Accounts (внизу слева голова человека в кружочке)
2. Выбрать пункт "Turn on cloud changes..." и в верхней строке "Sign with GitHub"

Подключить компилятор С к VSCode 
https://code.visualstudio.com/docs/cpp/config-mingw
не забыть выполнить конфигурирование IntelliSense, путем открытия коммандной карусели и выбора пункта Select IntelliSense Configuration (иначе не будут подключаться 
include)

Как прочитать из стандартного ввода при отладке GO в VSCode
В файл конфигурации запуска кода GO (файл launch.json, раздел "name": "Launch file" для go) добавить строчку "console": "integratedTerminal"

Последовательность установки Docker в UBUNTU под WSL (Windows) (из курса Основы работы с Docker на STEPIK):
1. запустить Linux (Ubuntu 22.04.2) из коммандной строки Windows
2. обновить существующий список пакетов:
	sudo apt update
3. установить обязательные пакеты, которые позволяют использовать пакеты apt через HTTPS:
	sudo apt install apt-transport-https ca-certificates curl software-properties-common
4. добавить в свою систему ключ GPG для официального репозитория Docker:
	curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
5. добавить репозиторий Docker в источники APT:
	echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
6. снова обновить существующий список пакетов, чтобы добавление было распознано:
	sudo apt update
7. убедиться, что мы собираемся установить Docker из репозитория вместо репозитория Ubuntu (по умолчанию):
	apt-cache policy docker-ce
обратить внимание, что docker-ce он не установлен, но кандидат на установку находится в репозитории Docker для Ubuntu 22.04 (в выводе команды строки Installed и Candidate)
8. установим Docker:
	sudo apt install docker-ce
9. убедиться, что DOCKER раборает
	sudo systemctl status docker

Ошибка "go.mod file not found in current directory or any parent directory; see 'go help modules'" в VSCode при попытке скомпилировать проект как с отладчиком, так и без него
1. посмотреть переменные go
	go env
2. для исправления ошибки изменить переменную GO111MODULE на auto командой 
	go env -w GO111MODULE=auto

Чтобы скомпилировать под Linux
1. Зайти в коммандную строку Windows
2. Выполнить комманду
	set GOOS=linux
3. Скомпилировать командой
	go build имя_файла

 


	
